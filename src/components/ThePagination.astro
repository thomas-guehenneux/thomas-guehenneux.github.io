---
import {
  Pagination,
  PaginationContent,
  PaginationEllipsis,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
} from '@/components/ui/pagination'

interface Props {
  currentPage: number
  lastPage: number
  url: { current: string; next: string | undefined; prev: string | undefined }
}
const { currentPage, lastPage, url } = Astro.props

const firstPage = url.current.replace(/\/\d+$/, '')

const getTwoPagesBackUrl = () => {
  if (currentPage === 3) {
    return `${firstPage}/`
  } else if (currentPage - 2 > 0) {
    return `${firstPage}/${currentPage - 2}`
  }
  return undefined
}

const twoPagesForward = currentPage + 1 < lastPage ? `${firstPage}/${currentPage + 2}` : undefined
---

<Pagination>
  <PaginationContent>
    {
      currentPage > 1 && (
        <PaginationItem>
          <PaginationPrevious href={url.prev + '/'} />
        </PaginationItem>
      )
    }
    {
      currentPage - 3 > 0 && (
        <PaginationItem>
          <PaginationEllipsis />
        </PaginationItem>
      )
    }
    {
      currentPage - 2 > 0 && (
        <PaginationItem>
          <PaginationLink href={getTwoPagesBackUrl()}>{currentPage - 2}</PaginationLink>
        </PaginationItem>
      )
    }
    {
      currentPage - 1 > 0 && (
        <PaginationItem>
          <PaginationLink href={url.prev + '/'}>{currentPage - 1}</PaginationLink>
        </PaginationItem>
      )
    }
    <PaginationItem>
      <PaginationLink href={url.current + '/'}>{currentPage}</PaginationLink>
    </PaginationItem>
    {
      currentPage < lastPage && (
        <PaginationItem>
          <PaginationLink href={url.next + '/'}>{currentPage + 1}</PaginationLink>
        </PaginationItem>
      )
    }
    {
      currentPage + 1 < lastPage && (
        <PaginationItem>
          <PaginationLink href={twoPagesForward}>{currentPage + 2}</PaginationLink>
        </PaginationItem>
      )
    }
    {
      currentPage + 2 < lastPage && (
        <PaginationItem>
          <PaginationEllipsis />
        </PaginationItem>
      )
    }
    {
      currentPage < lastPage && (
        <PaginationItem>
          <PaginationNext href={url.next + '/'} />
        </PaginationItem>
      )
    }
  </PaginationContent>
</Pagination>
