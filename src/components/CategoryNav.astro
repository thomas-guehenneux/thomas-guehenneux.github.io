---
import type { CollectionEntry } from 'astro:content'
// import { getRelativeLocaleUrl } from 'astro:i18n'

interface Props {
  categories: CollectionEntry<'categories'>[]
  lang: 'en' | 'ja'
  class: string
}
const { lang, categories, class: className } = Astro.props
const getRelativeLocaleUrl = (lang: string, url: string) => {
  if (!url.startsWith('/')) {
    throw new Error('URL must start with /')
  }

  return `/${lang}${url}`
}

---

<nav class={className}>
  <ul class="flex flex-wrap gap-4">
    <li>
      <a
        class:list={[
          'block select-none rounded-md border border-accent px-5 py-2.5',
          {
            'bg-ml-yellow text-black': Astro.url.pathname === getRelativeLocaleUrl(lang, '/'),
            'hover:bg-accent': Astro.url.pathname !== getRelativeLocaleUrl(lang, '/'),
          },
        ]}
        href={getRelativeLocaleUrl(lang, '/')}
      >
        All
      </a>
    </li>
    {
      categories.map((category) => (
        <>
          <li>
            <a
              class:list={[
                'block select-none rounded-md border border-accent px-5 py-2.5',
                {
                  'bg-ml-yellow text-black':
                    Astro.url.pathname === getRelativeLocaleUrl(lang, `/categories/${category.id}/`),
                  'hover:bg-accent': Astro.url.pathname !== getRelativeLocaleUrl(lang, `/categories/${category.id}/`),
                },
              ]}
              href={getRelativeLocaleUrl(lang, `/categories/${category.id}/`)}
            >
              {category.data.name}
            </a>
          </li>
        </>
      ))
    }
  </ul>
</nav>
